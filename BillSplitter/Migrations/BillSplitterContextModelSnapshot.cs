// <auto-generated />
using System;
using BillSplitter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BillSplitter.Migrations
{
    [DbContext(typeof(BillSplitterContext))]
    partial class BillSplitterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15");

            modelBuilder.Entity("BillSplitter.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(140);

                    b.Property<int>("PaidByRoomMateId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaidByRoomMateId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("BillSplitter.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomMateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("RoomMateId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("BillSplitter.Models.RoomMate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoomMate");
                });

            modelBuilder.Entity("BillSplitter.Models.Bill", b =>
                {
                    b.HasOne("BillSplitter.Models.RoomMate", "PaidByRoomMate")
                        .WithMany("Bills")
                        .HasForeignKey("PaidByRoomMateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillSplitter.Models.Payment", b =>
                {
                    b.HasOne("BillSplitter.Models.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillSplitter.Models.RoomMate", "RoomMate")
                        .WithMany("Payments")
                        .HasForeignKey("RoomMateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
